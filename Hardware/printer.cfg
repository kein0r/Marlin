# This file serves as documentation for config parameters of delta
# style printers. One may copy and edit this file to configure a new
# delta printer. Only parameters unique to delta printers are
# described here - see the "example.cfg" file for description of
# common config parameters.

# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.

# The stepper_a section describes the stepper controlling the front
# left tower (at 210 degrees). This section also controls the homing
# parameters (homing_speed, homing_retract_dist) for all towers.
[stepper_a]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
step_distance: .01
#define XYZ_FULL_STEPS_PER_ROTATION 200
#define XYZ_MICROSTEPS 16
#define XYZ_BELT_PITCH 2
#define XYZ_PULLEY_TEETH 16
#define XYZ_STEPS ((XYZ_FULL_STEPS_PER_ROTATION) * (XYZ_MICROSTEPS) / double(XYZ_BELT_PITCH) / double(XYZ_PULLEY_TEETH))
endstop_pin: ^ar2
homing_speed: 50 
#position_endstop: 300.183068
#define MANUAL_Z_HOME_POS 299.9 // Distance between the nozzle to printbed after homing
#   Distance (in mm) between the nozzle and the bed when the nozzle is
#   in the center of the build area and the endstop triggers. This
#   parameter must be provided for stepper_a; for stepper_b and
#   stepper_c this parameter defaults to the value specified for
#   stepper_a.
#arm_length: 217.0
#define DELTA_DIAGONAL_ROD 217.0 // mm
#   Length (in mm) of the diagonal rod that connects this tower to the
#   print head. This parameter must be provided for stepper_a; for
#   stepper_b and stepper_c this parameter defaults to the value
#   specified for stepper_a.
#angle:
#   This option specifies the angle (in degrees) that the tower is
#   at. The default is 210 for stepper_a, 330 for stepper_b, and 90
#   for stepper_c.

# The stepper_b section describes the stepper controlling the front
# right tower (at 330 degrees).
[stepper_b]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar56
step_distance: .01
endstop_pin: ^ar15
#position_endstop: 299.977783

# The stepper_c section describes the stepper controlling the rear
# tower (at 90 degrees).
[stepper_c]
step_pin: ar46
dir_pin: ar48
enable_pin: !ar62
step_distance: .01
endstop_pin: ^ar19
#position_endstop: 299.855424

[extruder]
step_pin: ar26
dir_pin: !ar28
enable_pin: !ar24
#step_distance: 0.011797752
#step_distance: 0.011235955
#step_distance: 0.011015642
step_distance: 0.010799649
#step_distance: 0.010674157
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
control: pid
pid_Kp: 27.323
pid_Ki: 1.612
pid_Kd: 115.781
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
control: watermark
min_temp: 0
max_temp: 130

# Print cooling fan (omit section if fan not present).
[fan]
pin: ar9

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A600DDM6-if00-port0
pin_map: arduino

[printer]
kinematics: delta
#   This option must be "delta" for linear delta printers.
max_velocity: 300
#   Maximum velocity (in mm/s) of the toolhead relative to the
#   print. This parameter must be specified.
max_accel: 3000
#   Maximum acceleration (in mm/s^2) of the toolhead relative to the
#   print. This parameter must be specified.
max_z_velocity: 150
#   For delta printers this limits the maximum velocity (in mm/s) of
#   moves with z axis movement. This setting can be used to reduce the
#   maximum speed of up/down moves (which require a higher step rate
#   than other moves on a delta printer). The default is to use
#   max_velocity for max_z_velocity.
minimum_z_position: -2
#   The minimum Z position that the user may command the head to move
#   to.  The default is 0.
#delta_radius: 136.04977868
#define DELTA_SMOOTH_ROD_OFFSET (323.3 + 2 * 20.0) / 1.7320508 // mm
#define DELTA_EFFECTOR_OFFSET 20.0 // mm
#define DELTA_CORNER_OFFSET 20.0 * (1 + 1.7320508/2)
#define DELTA_CARRIAGE_OFFSET 13.0 + 11.8/2 + (DELTA_CORNER_OFFSET) // mm
#   Radius (in mm) of the horizontal circle formed by the three linear
#   axis towers. This parameter may also be calculated as:
#    delta_radius = smooth_rod_offset - effector_offset - carriage_offset
#   This parameter must be provided.

# The delta_calibrate section enables a DELTA_CALIBRATE extended
# g-code command that can calibrate the tower endstop positions and
# angles.
[delta_calibrate]
radius: 50
#   Radius (in mm) of the area that may be probed. This is typically
#   the size of the printer bed. This parameter must be provided.
#speed: 50
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#samples: 1
#   The number of times to probe each point.  The probed z-values
#   will be averaged.  The default is to probe 1 time.
#sample_retract_dist: 2.0
#   The distance (in mm) to retract between each sample if
#   sampling more than once.  Default is 2mm.

# Mesh Bed Leveling. One may define a [bed_mesh] config section
# to enable move transformations that offset the z axis based
# on a mesh generated from probed points. Note that bed_mesh
# and bed_tilt are incompatible, both cannot be defined.  When
# using a probe to home the z-axis, it is recommended to define
# a [homing_override] section in printer.cfg to home toward the
# center of the print area.

[bed_mesh]
#speed: 50
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
mesh_radius: 40
#   Defines the radius of the mesh to probe for round beds.  Note that the
#   radius is relative to the coordinate specified by the mesh_origin option.
#   This parameter must be provided for round beds and omitted for rectangular
#   beds.
#mesh_origin:
#   Defines the center x,y coordinate of the mesh for round beds.  This
#   coordinate is relative to the probe's location.  It may be useful
#   to adjust the mesh_origin in an effort to maximize the size of the
#   mesh radius.  Default is 0,0.  This parameter must be omitted for
#   rectangular beds.
#mesh_min:
#   Defines the minimum x,y coodinate of the mesh for rectangular beds.  This
#   coordinate is relative to the probe's location. This will be the first
#   point probed, nearest to the origin. This parameter must be provided for
#   rectangular beds.
#mesh_max:
#   Defines the maximum x,y coordinate of the mesh for rectangular beds.
#   Adheres to the same principle as mesh_min, however this will be the
#   furthest point probed from the bed's origin. This parameter must be
#   provided for rectangular beds.
#probe_count: 3,3
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each axis.
#   A single value is also valid, in which case that value will be applied
#   to both axes.  Default is 3,3.
#round_probe_count: 5
#   For round beds, this integer value defines the maximum number of
#   points to probe along each axis. This value must be an odd number.
#   Default is 5.
#fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled.  Default is 1.0.
#fade_end: 0.0
#   The gcode z position in which phasing out completes.  When set
#   to a value below fade_start, fade is disabled. It should be
#   noted that fade may add unwanted scaling along the z-axis of a
#   print.  If a user wishes to enable fade, a value of 10.0 is
#   recommended. Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#algorithm: lagrange
#   The interpolation algorithm to use. May be either "lagrange"
#   or "bicubic". This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.
#relative_reference_index:
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.

# Common EXP1 / EXP2 (display) pins
[board_pins]
aliases:
    # Common EXP1 header found on many "all-in-one" ramps clones
    EXP1_1=ar37, EXP1_3=ar17, EXP1_5=ar23, EXP1_7=ar27, EXP1_9=<GND>,
    EXP1_2=ar35, EXP1_4=ar16, EXP1_6=ar25, EXP1_8=ar29, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=ar50, EXP2_3=ar31, EXP2_5=ar33, EXP2_7=ar49, EXP2_9=<GND>,
    EXP2_2=ar52, EXP2_4=ar53, EXP2_6=ar51, EXP2_8=ar41, EXP2_10=<RST>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "spi"
    # Note, some boards wire: EXP2_8=<RST>, EXP2_10=ar41

######################################################################
# "RepRapDiscount 2004 Smart Controller" type displays
######################################################################
[display]
lcd_type: hd44780
rs_pin: EXP1_4
e_pin: EXP1_3
d4_pin: EXP1_5
d5_pin: EXP1_6
d6_pin: EXP1_7
d7_pin: EXP1_8
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8

[output_pin beeper]
pin: EXP1_1

######################################################################
# Optional G-Code features
######################################################################

# A virtual sdcard may be useful if the host machine is not fast
# enough to run OctoPrint well. It allows the Klipper host software to
# directly print gcode files stored in a directory on the host using
# standard sdcard G-Code commands (eg, M24).
[virtual_sdcard]
path: ~/.octoprint/uploads/
#   The path of the local directory on the host machine to look for
#   g-code files. This is a read-only directory (sdcard file writes
#   are not supported). One may point this to OctoPrint's upload
#   directory (generally ~/.octoprint/uploads/ ). This parameter must
#   be provided.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [printer]
#*# delta_radius = 134.517079
#*#
#*# [stepper_a]
#*# angle = 209.407809
#*# arm_length = 217.000000
#*# position_endstop = 300.157391
#*#
#*# [stepper_b]
#*# angle = 329.773916
#*# arm_length = 217.000000
#*# position_endstop = 300.078014
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 217.000000
#*# position_endstop = 299.791029
#*#
#*# [delta_calibrate]
#*# height0 = 0.0
#*# height0_pos = 30018.000,29998.000,29986.000
#*# height1 = 0.0
#*# height1_pos = 32775.000,32755.000,27162.000
#*# height2 = 0.0
#*# height2_pos = 28883.000,34800.000,28850.000
#*# height3 = 0.0
#*# height3_pos = 27420.000,32369.000,32356.000
#*# height4 = 0.0
#*# height4_pos = 29052.000,29031.000,33463.000
#*# height5 = 0.0
#*# height5_pos = 32040.000,27650.000,32007.000
#*# height6 = 0.0
#*# height6_pos = 34141.000,28950.000,28937.000
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.100888, 0.100888, 0.100888, 0.100888, 0.100888
#*# 	  -0.003335, -0.003335, 0.002982, 0.003595, 0.003595
#*# 	  0.001174, -0.100778, -0.101192, 0.000478, 0.098209
#*# 	  0.000798, 0.000798, -0.000334, 0.003461, 0.003461
#*# 	  0.004279, 0.004279, 0.004279, 0.004279, 0.004279
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = -40.0002786848
#*# max_x = 40.0009977513
#*# min_y = -40.0024216916
#*# max_y = 40.0006373579
